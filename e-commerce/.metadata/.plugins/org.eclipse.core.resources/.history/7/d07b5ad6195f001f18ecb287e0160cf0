package com.e_commerce.CategoryService.Controller;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


import com.e_commerce.CategoryService.Entity.Category;
import com.e_commerce.CategoryService.ErrorResponse.ErrorResponse;
import com.e_commerce.CategoryService.Service.CategoryService;


@RestController
@RequestMapping("/category")
public class CategoryController {
	private static final Logger logger = LoggerFactory.getLogger(CategoryController.class);

	@Autowired
	CategoryService categoryService;
	@GetMapping("/id/{id}")
	 public ResponseEntity<?> getCategoryById(@PathVariable Long catId) {
		Optional<Category> categoryId = categoryService.getCategoryById(catId);

        if (categoryId.isPresent()) {
        	Category category = categoryId.get();
            return new ResponseEntity<>(category, HttpStatus.OK);
        } else {
            String errorMessage = "Product not found with ID: " + catId;
            logger.error("Error: {} | Status: {}", errorMessage, HttpStatus.NOT_FOUND);
            ErrorResponse errorResponse = new ErrorResponse(errorMessage, HttpStatus.NOT_FOUND);
            return new ResponseEntity<>(errorResponse, HttpStatus.NOT_FOUND);
        }
    }
	@DeleteMapping("/deleteId/{id}")
	public ResponseEntity<boolean> deleteById(@PathVariable Long caId){
		  cartService.deleteCart(id);
		return new ResponseEntity<>(HttpStatus.NO_CONTENT);
	}


	
}
