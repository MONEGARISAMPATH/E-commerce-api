spring.application.name=ApiGateway
server.port=8086
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.main.web-application-type=reactive

# Spring Cloud Gateway Routes Configuration
#spring.cloud.gateway.default-filters[0]=CircuitBreaker=name=defaultCircuitBreaker, fallbackUri=forward:/fallback/default


# UserService Route
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USERSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/user/**
spring.cloud.gateway.routes[0].filters[0]=CircuitBreaker=name=userServiceOrderBreaker, fallbackUri=forward:/fallback/userService
# ProductService Route
spring.cloud.gateway.routes[1].id=PRODUCTSERVICE
spring.cloud.gateway.routes[1].uri=lb://PRODUCTSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/product/**
spring.cloud.gateway.routes[1].filters[0]=CircuitBreaker=name=productServiceOrderBreaker, fallbackUri=forward:/fallback/productService

# CartService Route
spring.cloud.gateway.routes[2].id=CARTSERVICE
spring.cloud.gateway.routes[2].uri=lb://CARTSERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/cart/**
spring.cloud.gateway.routes[2].filters[0]=CircuitBreaker=name=cartServiceOrderBreaker,fallbackUri=forward:/fallback/cartService

# PaymentService Route
spring.cloud.gateway.routes[3].id=PAYMENTSERVICE
spring.cloud.gateway.routes[3].uri=lb://PAYMENTSERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/payment/**
spring.cloud.gateway.routes[3].filters[0]=CircuitBreaker=name=paymentServiceOrderBreaker,fallbackUri=forward:/fallback/paymentService

#CategoryService
spring.cloud.gateway.routes[4].id=CATEGORYSERVICE
spring.cloud.gateway.routes[4].uri=lb://CATEGORYSERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/category/**
spring.cloud.gateway.routes[4].filters[0]=Hystrix=name=categoryServiceBreaker,fallbackUri=forward:/fallback/categoryService
# OrderService Route
spring.cloud.gateway.routes[5].id=ORDERSERVICE
spring.cloud.gateway.routes[5].uri=lb://ORDERSERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/orders/**
spring.cloud.gateway.routes[5].filters[0]=Hystrix=name=orderServiceBreaker,fallbackUri=forward:/fallback/orderService


# Resilience4J Circuit Breaker Configuration

# User Service Circuit Breaker
resilience4j.circuitbreaker.instances.userServiceOrderBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.userServiceOrderBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.userServiceOrderBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.userServiceOrderBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.userServiceOrderBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.userServiceOrderBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.userServiceOrderBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.userServiceOrderBreaker.sliding-window-type=COUNT_BASED

# Product Service Circuit Breaker
resilience4j.circuitbreaker.instances.productServiceOrderBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.productServiceOrderBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.productServiceOrderBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.productServiceOrderBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.productServiceOrderBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.productServiceOrderBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.productServiceOrderBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.productServiceOrderBreaker.sliding-window-type=COUNT_BASED

# Cart Service Circuit Breaker
resilience4j.circuitbreaker.instances.cartServiceOrderBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.cartServiceOrderBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.cartServiceOrderBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.cartServiceOrderBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.cartServiceOrderBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.cartServiceOrderBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cartServiceOrderBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.cartServiceOrderBreaker.sliding-window-type=COUNT_BASED


# Payment Service Circuit Breaker
resilience4j.circuitbreaker.instances.paymentServiceOrderBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.paymentServiceOrderBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.paymentServiceOrderBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.paymentServiceOrderBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.paymentServiceOrderBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.paymentServiceOrderBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.paymentServiceOrderBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.paymentServiceOrderBreaker.sliding-window-type=COUNT_BASED

# Actuator Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.ping.enabled=true
management.health.circuitbreakers.enabled=true

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.io.github.resilience4j=DEBUG













