package com.e_commerce.UserService.Controller;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;


import com.e_commerce.UserService.Entity.User;
import com.e_commerce.UserService.Service.UserService;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/user")
public class UserController {
	private static final Logger logger = LoggerFactory.getLogger(UserController.class);
	public UserController(UserService userService) {
		this.userService = userService;
	}

	@Autowired
	UserService userService;

	@GetMapping("/id/{id}")
	public ResponseEntity<User> getByUserId(@PathVariable Long id) {
		Optional<User> optionalUser = userService.getByUserId(id);
		if (optionalUser.isPresent()) {
			User user = optionalUser.get();
			return new ResponseEntity<>(user, HttpStatus.OK);
		} else {
			 String errorMessage = "Product not found with ID: " + id;
			 logger.error("Error: {}| Status: {}",errorMessage,HttpStatus.NOT_FOUND);
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}
	}
	

	@PostMapping("/register")
	public ResponseEntity<User> createUser(@Valid @RequestBody User user) {
		User users = userService.createUser(user);
		return new ResponseEntity<>(users, HttpStatus.OK);
		// return ResponseEntity.ok(userService.createUser(user));
	}

}
